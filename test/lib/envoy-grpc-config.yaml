static_resources:
  listeners:
  - name: ingress_listener
    address:
      socket_address: 
        address: BIND_HOST
        port_value: INGRESS_PORT
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress
          use_remote_address: false
          generate_request_id: true
          stat_prefix: grpc.test.ingress
          route_config:
            name: ingress_route_config
            virtual_hosts:
            - name: local_test_server
              domains: ["*"]
              routes:
              - match:
                  prefix: /
                route:
                  cluster: local_test_server
            request_headers_to_add:
            - header:
                key: x-tubi-envoy-egress-port
                value: "EGRESS_PORT"
            - header:
                key: x-tubi-envoy-egress-addr
                value: BIND_HOST
            # MANAGED_HOST_REPLACEMENT
          http_filters:
          - name: envoy.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              dynamic_stats: true

  - name: egress_listener
    address:
      socket_address: 
        address: BIND_HOST
        port_value: EGRESS_PORT
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: egress
          use_remote_address: true
          stat_prefix: grpc.test.egress
          route_config:
            name: egress_route_config
            virtual_hosts:
            - name: remote_test_server
              domains:
              - DOMAIN_NAME:INGRESS_PORT
              routes:
              - match:
                  prefix: /
                route:
                  cluster: remote_test_server
          http_filters:
          - name: envoy.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              dynamic_stats: true

  clusters:
  - name: local_test_server
    http2_protocol_options: {}
    type: STATIC
    connect_timeout: 0.25s
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: local_test_server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: BIND_HOST
                port_value: SERVICE_PORT

  - name: remote_test_server
    http2_protocol_options: {}
    type: STATIC
    connect_timeout: 0.25s
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: remote_test_server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: BIND_HOST
                port_value: INGRESS_PORT # route the traffic back

  # zipkin
  - name: zipkin
    type: STATIC
    connect_timeout: 0.25s
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: zipkin
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: BIND_HOST
                port_value: ZIPKIN_PORT



# Administration interface
admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: ADMIN_PORT

tracing:
  http:
    name: envoy.zipkin
    typed_config:
      "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
      collector_cluster: zipkin
      collector_endpoint: /api/v1/spans
      collector_endpoint_version: HTTP_JSON

